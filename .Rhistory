a <- 1
a
c(1, 2, 3, 4)
x <- c(5, 6, 7, 8)
plot(x)
installed.packages("swirl")
install.packages('swirl')
swirl
library('swirl')
ls()
swirl()
cls
cat)"\014)"
cat(\014)"
cat('\014')
facebookData <- read.delim('/home/rakesh/Documents/Data_Analysis_R\pseudo_facebook.tsv')
facebookData <- read.delim('/home/rakesh/Documents/Data_Analysis_R\pseudo_facebook.tsv')
setwd("/home/rakesh/Documents/Data_Analysis_R")
facebookData <- read.delim('pseudo_facebook.tsv')
View(facebookData)
summary(facebookData$dob_month)
cat('\014')
age <- facebookData$age
friend_count <- facebookData$friend_count
cor.test((age, friend_count, alternative = c("two.sided", "less", "greater"), method = c("pearson","kendall", "spearman"), exact = NULL, conf.level = 0.95, continuity = FALSE, ...))
cor.test((age, friend_count, alternative = c("two.sided", "less", "greater"), method = c("pearson","kendall", "spearman"), exact = NULL, conf.level = 0.95, continuity = FALSE, ...))
cor.test((age, friend_count, alternative = c("two.sided", "less", "greater"), method = c("pearson","kendall","spearman"), exact = NULL, conf.level = 0.95, continuity = FALSE, ...))
cor.test((age, friend_count, alternative = c("two.sided", "less", "greater"), method = c("pearson","kendall","spearman")))
View(age)
Summary(age)
summary(age)
cat('\014')
cor(age,friend_count)
?cor_test
?cor.test
cor.test(age, friend_count)
#if you can also the with function here
with(facebookData, cor.test(age, friend_count, method = c("pearson")))
#this file will show the scatter plot of total likes received vs likes received
plot(x = facebookData$likes_received, y= facebookData$www_likes_received)
#this file will show the scatter plot of total likes received vs likes received
plot(x = facebookData$likes_received, y= facebookData$www_likes_received) +
xlim(c(0, 50000))
#this file will show the scatter plot of total likes received vs likes received
plot(x = facebookData$likes_received, y= facebookData$www_likes_received) +
xlab(c(0, 50000))
#this file will show the scatter plot of total likes received vs likes received
plot(x = facebookData$likes_received, y= facebookData$www_likes_received, xlim(c(0, 50000)))
#this file will show the scatter plot of total likes received vs likes received
plot(x = facebookData$likes_received, y= facebookData$www_likes_received)
ggplot(x = facebookData$likes_received, y = facebookData$www_likes_received) + geom_point()
#including geom_point tells the ggplot that we are looking for only scatter plot
cat("\014")
library(ggplot2)
ggplot(x = facebookData$likes_received, y = facebookData$www_likes_received) + geom_point()
#including geom_point tells the ggplot that we are looking for only scatter plot
ggplot(x = likes_received, y = www_likes_received, data=facebookData) + geom_point()
#including geom_point tells the ggplot that we are looking for only scatter plot
ggplot(y = likes_received, x = www_likes_received, data=facebookData) +
geom_point()
#including geom_point tells the ggplot that we are looking for only scatter plot
ggplot(aes(y = likes_received, x = www_likes_received), data=facebookData) +
geom_point()
#including geom_point tells the ggplot that we are looking for only scatter plot
ggplot(aes(y = likes_received, x = www_likes_received), data=facebookData) +
geom_point() +
xlim(0, quantile(facebookData$www_likes_received, 0.95))
ylim(0, quantile(facebookData$www_likes_received, 0.95))
#if you are using ggplot then you need to include your data in aes wrapper
#including geom_point tells the ggplot that we are looking for only scatter plot
ggplot(aes(y = likes_received, x = www_likes_received), data=facebookData) +
geom_point() +
xlim(0, quantile(facebookData$www_likes_received, 0.95))
ylim(0, quantile(facebookData$likes_received, 0.95))
#if you are using ggplot then you need to include your data in aes wrapper
#including geom_point tells the ggplot that we are looking for only scatter plot
ggplot(aes(y = likes_received, x = www_likes_received), data=facebookData) +
geom_point() +
xlim(0, quantile(facebookData$www_likes_received, 0.95)) +
ylim(0, quantile(facebookData$likes_received, 0.95))
#if you are using ggplot then you need to include your data in aes wrapper
#including geom_point tells the ggplot that we are looking for only scatter plot
ggplot(aes(y = likes_received, x = www_likes_received), data=facebookData) +
geom_point() +
xlim(0, quantile(facebookData$www_likes_received, 0.95)) +
ylim(0, quantile(facebookData$likes_received, 0.95)) +
geom_smooth(method = "lm", color = 'red')
#if you are using ggplot then you need to include your data in aes wrapper
#including geom_point tells the ggplot that we are looking for only scatter plot
#you can use this geom_smooth method to
#what do you think is the correlation between the two values
cor(facebookData$www_likes_received, facebookData$likes_received)
cor(quantile(facebookData$www_likes_received, 0.95), quantile(facebookData$likes_received, 0.95))
ggplot(aes(y = likes_received, x = www_likes_received), data=facebookData) +
geom_point() +
xlim(0, quantile(facebookData$www_likes_received, 0.95))
ylim(0, quantile(facebookData$likes_received, 0.95))
#if you are using ggplot then you need to include your data in aes wrapper
#including geom_point tells the ggplot that we are looking for only scatter plot
cat("\014")
data[facebp > quantile(data$V2,prob=1-n/100),]
data[facebookData$www_likes_received > quantile(facebookData$www_likes_received,prob=1-n/100),]
data[facebookData$www_likes_received > quantile(facebookData$www_likes_received,prob=1-5/100),]
data <- data[facebookData$www_likes_received > quantile(facebookData$www_likes_received,prob=1-5/100),]
ggplot(aes(y = likes_received, x = www_likes_received), data=facebookData) +
geom_point() +
xlim(0, quantile(facebookData$www_likes_received, 0.95)) +
ylim(0, quantile(facebookData$likes_received, 0.95)) +
geom_smooth(method = "lm", color = 'red')
#if you are using ggplot then you need to include your data in aes wrapper
#including geom_point tells the ggplot that we are looking for only scatter plot
#you can use this geom_smooth method to
#what do you think is the correlation between the two values
#cor(facebookData$www_likes_received, facebookData$likes_received)
#for finding top 5% data you can use quantitle
#cor(quantile(facebookData$www_likes_received, 0.95), quantile(facebookData$likes_received, 0.95))
data <- data[facebookData$www_likes_received > quantile(0, facebookData$www_likes_received,prob=1-5/100)]
cat("\014")
install
install.packages('alr3')
cat("\014")
library(alr3)
data(Mitchell)
?Mitchell
str(Mitchell)
ggplot(x= Mitchell$Temp, y=Mitchell$Month, data = Mitchell) +
geom_point()
ggplot(aes(x= Mitchell$Temp, y=Mitchell$Month), data = Mitchell) +
geom_point()
#q plot is superintelligent when it comes to scatter plot
cor.test(Mitchell$Temp, Mitchell$Month)
ggplot(aes(x= Mitchell$Temp, y=Mitchell$Month), data = Mitchell) +
geom_point() +
xlim(c(0, 12))
ggplot(aes(x= Mitchell$Temp, y=Mitchell$Month), data = Mitchell) +
geom_point() +
xlim(c(0, 12), 100)
ggplot(aes(x= Mitchell$Temp, y=Mitchell$Month), data = Mitchell) +
geom_point() +
scale_x_discrete(breaks = seq(0, 203, 12))
#if you want to divide your scatter plot into multiple steps then you could do that
ggplot(aes(x= Mitchell$Temp, y=Mitchell$Month), data = Mitchell) +
geom_point() +
scale_x_discrete(breaks = seq(0, 203, 12))
#if you want to divide your scatter plot into multiple steps then you could do that
range(Mitchell$Month)
ggplot(aes(x= Mitchell$Temp, y=Mitchell$Month), data = Mitchell) +
geom_point() +
scale_x_discrete(breaks = seq(0, 203, 12))
#if you want to divide your scatter plot into multiple steps then you could do that
ggplot(aes(y= Mitchell$Temp, x=Mitchell$Month), data = Mitchell) +
geom_point() +
scale_x_discrete(breaks = seq(0, 203, 12))
#if you want to divide your scatter plot into multiple steps then you could do that
cat("\014")
source('~/Documents/Data_Analysis_R/variable_inside_dataFrame.R', echo=TRUE)
source('~/Documents/Data_Analysis_R/variable_inside_dataFrame.R', echo=TRUE)
View(facebookData$age_with_months)
cat("\014")
ggplot(aes(x = gender, y = age), data = subset(facebookData, !is.na(gender))) +
geom_boxplot() +
stat_summary(fun.y = mean(), geom = 'point', shape = 4)
ggplot(aes(x = gender, y = age), data = subset(facebookData, !is.na(gender))) +
geom_boxplot() +
stat_summary(fun.y = mean, geom = 'point', shape = 4)
ggplot(aes(x = gender, y = age), data = subset(facebookData, !is.na(gender))) +
geom_line() +
stat_summary(fun.y = mean, geom = 'point', shape = 4)
ggplot(aes(x = gender, y = age), data = subset(facebookData, !is.na(gender))) +
geom_line() +
stat_summary(fun.y = mean, geom = 'point', shape = 4)
ggplot(aes(x = age, y = friend_count), data = subset(facebookData, !is.na(gender))) +
geom_line(aes(color= gender), stat = 'summary', fun.y = median)
cat("\014")
